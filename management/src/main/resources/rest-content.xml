<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:log4j.properties</value>
                <value>classpath:configuration.properties</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

    <bean id="coreDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="${core_jdbc_url}"/>
        <property name="username" value="${core_mysql_username}"/>
        <property name="password" value="${core_mysql_password}"/>
        <property name="maxActive" value="100"/>
        <property name="maxIdle" value="30"/>
        <property name="maxWait" value="500"/>
        <property name="defaultAutoCommit" value="true"/>
    </bean>

    <bean id="eventDataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="${event_jdbc_url}"/>
        <property name="username" value="${event_mysql_username}"/>
        <property name="password" value="${event_mysql_password}"/>
        <property name="maxActive" value="100"/>
        <property name="maxIdle" value="30"/>
        <property name="maxWait" value="500"/>
        <property name="defaultAutoCommit" value="true"/>
    </bean>

    <bean id="dataSource" class="mybatis.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry value-ref="coreDataSource" key="core"></entry>
                <entry value-ref="eventDataSource" key="event"></entry>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="coreDataSource"></property>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-configuration.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionFactory">
            <bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory"/>
        </property>
    </bean>

    <!-- 配置 文件上传的支持 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
        <constructor-arg index="1" value="BATCH"/>
    </bean>
    
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:encache-shiro.xml"/>
    </bean>
    
    <bean id="accountRealm" class="security.AccountRealm"></bean>
    
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    	<property name="realm" ref="accountRealm" />
    	<property name="cacheManager" ref="shiroEhcacheManager" />
    </bean>
    
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="unauthorizedUrl" value="/login"/>
        <property name="filterChainDefinitions">
        	<value>
        		/ = anon
        		/login = anon
        		/plugins/** = anon
        		
        		/dashboard = roles[dashboard_viewer]
        		
        		/order/* = roles[order_writer]
        		
        		/qrcode/create = roles[qrcode_writer]
        		
        		/qrcode/prebind/unbind = roles[qrcode_prebind_writer]
        		
        	</value>
        </property>
    </bean>
    
    <task:annotation-driven/>
    <import resource="rest-controller.xml"/>
    <import resource="rest-service.xml"/>
    <import resource="rest-dao.xml"/>
</beans>